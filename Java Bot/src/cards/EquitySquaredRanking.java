package cards;

public class EquitySquaredRanking {
    private static Hand ranking[] = new Hand[]{
        new Hand("Ah","Ad"),
        new Hand("Kh","Kd"),
        new Hand("Qh","Qd"),
        new Hand("Jh","Jd"),
        new Hand("Th","Td"),
        new Hand("9h","9d"),
        new Hand("Ah","Kh"),
        new Hand("8h","8d"),
        new Hand("Ah","Qh"),
        new Hand("Ah","Kd"),
        new Hand("Ah","Jh"),
        new Hand("Ah","Th"),
        new Hand("Kh","Qh"),
        new Hand("Ah","Qd"),
        new Hand("7h","7d"),
        new Hand("Kh","Jh"),
        new Hand("Ah","Jd"),
        new Hand("Kh","Th"),
        new Hand("Ah","9h"),
        new Hand("Kh","Qd"),
        new Hand("Ah","Td"),
        new Hand("Qh","Jh"),
        new Hand("Ah","8h"),
        new Hand("6h","6d"),
        new Hand("Kh","Jd"),
        new Hand("Qh","Th"),
        new Hand("Ah","7h"),
        new Hand("Kh","9h"),
        new Hand("Kh","Td"),
        new Hand("Jh","Th"),
        new Hand("Ah","9d"),
        new Hand("Ah","5h"),
        new Hand("Qh","Jd"),
        new Hand("Ah","6h"),
        new Hand("Qh","9h"),
        new Hand("Ah","4h"),
        new Hand("Ah","8d"),
        new Hand("5h","5d"),
        new Hand("Qh","Td"),
        new Hand("Kh","8h"),
        new Hand("Ah","3h"),
        new Hand("Jh","9h"),
        new Hand("Ah","7d"),
        new Hand("Kh","7h"),
        new Hand("Kh","9d"),
        new Hand("Jh","Td"),
        new Hand("Ah","2h"),
        new Hand("Th","9h"),
        new Hand("Qh","8h"),
        new Hand("Kh","6h"),
        new Hand("Ah","5d"),
        new Hand("Ah","6d"),
        new Hand("Qh","9d"),
        new Hand("Kh","5h"),
        new Hand("Jh","8h"),
        new Hand("Ah","4d"),
        new Hand("Kh","8d"),
        new Hand("4h","4d"),
        new Hand("Th","8h"),
        new Hand("Kh","4h"),
        new Hand("Qh","7h"),
        new Hand("Ah","3d"),
        new Hand("Jh","9d"),
        new Hand("Kh","7d"),
        new Hand("9h","8h"),
        new Hand("Kh","3h"),
        new Hand("Qh","6h"),
        new Hand("Th","9d"),
        new Hand("Ah","2d"),
        new Hand("Jh","7h"),
        new Hand("Qh","8d"),
        new Hand("Kh","6d"),
        new Hand("Kh","2h"),
        new Hand("Qh","5h"),
        new Hand("Th","7h"),
        new Hand("Jh","8d"),
        new Hand("Qh","4h"),
        new Hand("Kh","5d"),
        new Hand("9h","7h"),
        new Hand("3h","3d"),
        new Hand("8h","7h"),
        new Hand("Th","8d"),
        new Hand("Jh","6h"),
        new Hand("Qh","3h"),
        new Hand("Qh","7d"),
        new Hand("Kh","4d"),
        new Hand("Jh","5h"),
        new Hand("9h","8d"),
        new Hand("Th","6h"),
        new Hand("Qh","2h"),
        new Hand("Qh","6d"),
        new Hand("Kh","3d"),
        new Hand("9h","6h"),
        new Hand("Jh","7d"),
        new Hand("Jh","4h"),
        new Hand("8h","6h"),
        new Hand("7h","6h"),
        new Hand("Qh","5d"),
        new Hand("Kh","2d"),
        new Hand("Th","7d"),
        new Hand("Jh","3h"),
        new Hand("2h","2d"),
        new Hand("Th","5h"),
        new Hand("9h","7d"),
        new Hand("Qh","4d"),
        new Hand("Jh","2h"),
        new Hand("8h","7d"),
        new Hand("9h","5h"),
        new Hand("Th","4h"),
        new Hand("6h","5h"),
        new Hand("7h","5h"),
        new Hand("8h","5h"),
        new Hand("Jh","6d"),
        new Hand("Qh","3d"),
        new Hand("Th","3h"),
        new Hand("Jh","5d"),
        new Hand("Th","6d"),
        new Hand("5h","4h"),
        new Hand("Qh","2d"),
        new Hand("Th","2h"),
        new Hand("9h","6d"),
        new Hand("6h","4h"),
        new Hand("8h","6d"),
        new Hand("7h","6d"),
        new Hand("9h","4h"),
        new Hand("Jh","4d"),
        new Hand("7h","4h"),
        new Hand("8h","4h"),
        new Hand("9h","3h"),
        new Hand("Jh","3d"),
        new Hand("5h","3h"),
        new Hand("Th","5d"),
        new Hand("9h","2h"),
        new Hand("6h","5d"),
        new Hand("6h","3h"),
        new Hand("Jh","2d"),
        new Hand("9h","5d"),
        new Hand("Th","4d"),
        new Hand("7h","5d"),
        new Hand("8h","5d"),
        new Hand("7h","3h"),
        new Hand("4h","3h"),
        new Hand("8h","3h"),
        new Hand("8h","2h"),
        new Hand("Th","3d"),
        new Hand("5h","2h"),
        new Hand("5h","4d"),
        new Hand("Th","2d"),
        new Hand("6h","2h"),
        new Hand("6h","4d"),
        new Hand("4h","2h"),
        new Hand("9h","4d"),
        new Hand("7h","2h"),
        new Hand("7h","4d"),
        new Hand("8h","4d"),
        new Hand("9h","3d"),
        new Hand("3h","2h"),
        new Hand("5h","3d"),
        new Hand("9h","2d"),
        new Hand("6h","3d"),
        new Hand("4h","3d"),
        new Hand("7h","3d"),
        new Hand("8h","3d"),
        new Hand("8h","2d"),
        new Hand("5h","2d"),
        new Hand("6h","2d"),
        new Hand("4h","2d"),
        new Hand("7h","2d"),
        new Hand("3h","2d")    
    };
    
    
    /**
     * returns the ranking of a given hand in the equity squared table
     * 1 is the best, 
     * @param handToRank
     * @return
     */
    public static int getRank(Hand handToRank){
        int rank = 1;
        for(Hand hand : ranking){
            if(handToRank.isEqualIgnoringSuit(hand) && (hand.isSuited() == handToRank.isSuited())){
                return rank;
            }
            rank++;
        }
        
        return 0;
    }
}
